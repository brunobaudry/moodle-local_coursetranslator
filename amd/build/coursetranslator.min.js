define("local_coursetranslator/coursetranslator",["exports","core/ajax","./selectors","core/modal"],(function(_exports,_ajax,_selectors,_modal){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/*
   * @module     local_coursetranslator/coursetranslator
   * @copyright  2022 Kaleb Heitzman <kaleb@jamfire.io>
   * @copyright  2024 Bruno Baudry <bruno.baudry@bfh.ch>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_selectors=_interopRequireDefault(_selectors),_modal=_interopRequireDefault(_modal);let tempTranslations={},mainEditorType="",config={},autotranslateButton={},checkboxes=[],sourceLang="",targetLang="";_exports.init=cfg=>{config=cfg,config.debug>0&&(window.console.info("debugging coursetranslator"),window.console.info(config)),mainEditorType=config.userPrefs,(()=>{try{autotranslateButton=document.querySelector(_selectors.default.actions.autoTranslateBtn),checkboxes=document.querySelectorAll(_selectors.default.actions.checkBoxes),sourceLang=document.querySelector(_selectors.default.actions.sourceSwitcher).value,targetLang=document.querySelector(_selectors.default.actions.targetSwitcher).value}catch(e){config.debug&&window.console.error(e.message)}})(),document.addEventListener("change",(e=>{e.target.closest(_selectors.default.actions.targetSwitcher)&&switchTarget(e),e.target.closest(_selectors.default.actions.sourceSwitcher)&&switchSource(e),e.target.closest(_selectors.default.actions.showUpdated)&&showRows(_selectors.default.statuses.updated,e.target.checked),e.target.closest(_selectors.default.actions.showNeedUpdate)&&showRows(_selectors.default.statuses.needsupdate,e.target.checked),e.target.closest(_selectors.default.actions.checkBoxes)&&onItemChecked(e)})),document.addEventListener("click",(e=>{e.target.closest(_selectors.default.actions.toggleMultilang)&&onToggleMultilang(e.target.closest(_selectors.default.actions.toggleMultilang)),e.target.closest(_selectors.default.actions.autoTranslateBtn)&&(config.currentlang===config.lang||void 0===config.lang?_modal.default.create({title:"Cannot call deepl",body:"<p>Both languges are the same {$config.lang}</p>",show:!0,removeOnClose:!0}):doAutotranslate()),e.target.closest(_selectors.default.actions.selectAllBtn)&&toggleAllCheckboxes(e)})),toggleAutotranslateButton();document.querySelector(_selectors.default.actions.selectAllBtn).disabled=sourceLang===targetLang;document.querySelectorAll(_selectors.default.actions.validatorsBtns).forEach((e=>{e.addEventListener("click",(e=>{let key=e.target.parentElement.dataset.keyValidator;null===tempTranslations[key]||void 0===tempTranslations[key]?window.console.log(`Transaltion key "${key}" is undefined `):saveTranslation(key)}))})),config.autotranslate&&checkboxes.forEach((e=>{e.disabled=sourceLang===targetLang})),checkboxes.forEach((e=>{e.addEventListener("click",(()=>{toggleAutotranslateButton()}))}));const saveTranslation=key=>{let editor=tempTranslations[key].editor,text=editor.innerHTML,sourceText=tempTranslations[key].source,icon=document.querySelector(replaceKey(_selectors.default.actions.validatorIcon,key)),selector=_selectors.default.editors.multiples.editorsWithKey.replace("<KEY>",key),element=document.querySelector(selector),id=element.getAttribute("data-id"),tid=element.getAttribute("data-tid"),table=element.getAttribute("data-table"),field=element.getAttribute("data-field"),fielddata={};fielddata.courseid=config.courseid,fielddata.id=parseInt(id),fielddata.table=table,fielddata.field=field,config.debug>0&&window.console.log(fielddata),_ajax.default.call([{methodname:"local_coursetranslator_get_field",args:{data:[fielddata]},done:data=>{let fieldtext=data[0].text;if(data.length>0){let textarea=document.querySelector(_selectors.default.editors.multiples.textAreas.replace("<KEY>",key)),updatedtext=getupdatedtext(fieldtext,text,sourceText),tdata={};tdata.courseid=config.courseid,tdata.id=parseInt(id),tdata.tid=tid,tdata.table=table,tdata.field=field,tdata.text=updatedtext,config.debug>0&&window.console.log(tdata);const successMessage=()=>{element.classList.add("local-coursetranslator__success"),icon.setAttribute("role","status"),icon.setAttribute("data-status","local-coursetranslator/success"),setTimeout((()=>{icon.setAttribute("data-status","local-coursetranslator/saved")}))},errorMessage=error=>{editor.classList.add("local-coursetranslator__error"),icon.setAttribute("role","status"),icon.setAttribute("data-status","local-coursetranslator/failed"),error&&(textarea.innerHTML=error)};_ajax.default.call([{methodname:"local_coursetranslator_update_translation",args:{data:[tdata]},done:data=>{config.debug>0&&window.console.log("ws: ",key,data),data.length>0?(successMessage(),textarea.innerHTML=data[0].text,config.currentlang===config.lang&&(document.querySelector(_selectors.default.sourcetexts.keys.replace("<KEY>",key)).innerHTML=text)):errorMessage()},fail:error=>{errorMessage(error)}}])}else window.console.log(data)},fail:error=>{window.console.log(error)}}])},getupdatedtext=(fieldtext,text,source)=>{let otherlangtext=`{mlang other}${source}{mlang}`,targetLangTag=`{mlang ${config.lang}}`,targetlangtext=`${targetLangTag}${text}{mlang}`;if(-1===fieldtext.indexOf("{mlang"))return otherlangtext+targetlangtext;let alllangregex=new RegExp("({mlang [a-z]{2,5}})(.*?){mlang}","g"),all={},tagReg=new RegExp("{mlang (other|[a-z]{2})}",""),splited=fieldtext.split(alllangregex),foundsourcetag="";var l="";for(var i in splited)""!==splited[i]&&(splited[i].match(tagReg)?l=splited[i].match(tagReg)[0]:""!==l&&(all[l]=splited[i],splited[i]===source&&(foundsourcetag=l),l=""));"{mlang other}"!==foundsourcetag&&delete all[foundsourcetag],all["{mlang other}"]=source,all[targetLangTag]=text;let s="";for(let tag in all)s+=tag+all[tag]+"{mlang}";return s}};const onItemChecked=e=>{toggleStatus(e.target.getAttribute("data-key"),e.target.checked)},toggleStatus=(key,checked)=>{let s="wait";checked&&(s="totranslate"),document.querySelector(replaceKey(_selectors.default.actions.validatorIcon,key)).setAttribute("data-status",`local-coursetranslator/${s}`)},showRows=(selector,selected)=>{document.querySelectorAll(selector).forEach((item=>{let k=item.getAttribute("data-row-id");toggleRowVisibility(item,selected),item.querySelector(replaceKey(_selectors.default.editors.multiples.checkBoxesWithKey,k)).checked=!1,toggleStatus(k,!1)})),toggleAutotranslateButton()},toggleRowVisibility=(row,checked)=>{checked?row.classList.remove("d-none"):row.classList.add("d-none")},switchTarget=e=>{let url=new URL(window.location.href);url.searchParams.set("target_lang",e.target.value),window.location=url.toString()},switchSource=e=>{let url=new URL(window.location.href);url.searchParams.set("lang",e.target.value),window.location=url.toString()},doAutotranslate=()=>{document.querySelectorAll(_selectors.default.statuses.checkedCheckBoxes).forEach((ckBox=>{let key=ckBox.getAttribute("data-key");getTranslation(key)}))},getTranslation=key=>{tempTranslations[key]={};let editorSettings=findEditor(key);config.debug>0&&window.console.log(editorSettings);let editor=editorSettings.editor,editorType=editorSettings.editorType,sourceText=document.querySelector(_selectors.default.sourcetexts.keys.replace("<KEY>",key)).getAttribute("data-sourcetext-raw"),icon=document.querySelector(replaceKey(_selectors.default.actions.validatorIcon,key));tempTranslations[key]={editorType:editorType,editor:editor,source:sourceText,translation:""};let formData=new FormData;formData.append("text",sourceText),formData.append("source_lang",sourceLang.toUpperCase()),formData.append("target_lang",targetLang.toUpperCase()),formData.append("auth_key",config.apikey),formData.append("tag_handling",document.querySelector(_selectors.default.deepl.tagHandling).checked?"html":"xml"),formData.append("context",document.querySelector(_selectors.default.deepl.context).value??null),formData.append("split_sentences",document.querySelector(_selectors.default.deepl.splitSentences).value),formData.append("preserve_formatting",document.querySelector(_selectors.default.deepl.preserveFormatting).checked),formData.append("formality",document.querySelector('[name="local-coursetranslator/formality"]:checked').value),formData.append("glossary_id",document.querySelector(_selectors.default.deepl.glossaryId).value),formData.append("outline_detection",document.querySelector(_selectors.default.deepl.outlineDetection).checked),formData.append("non_splitting_tags",toJsonArray(document.querySelector(_selectors.default.deepl.nonSplittingTags).value)),formData.append("splitting_tags",toJsonArray(document.querySelector(_selectors.default.deepl.splittingTags).value)),formData.append("ignore_tags",toJsonArray(document.querySelector(_selectors.default.deepl.ignoreTags).value)),config.debug&&window.console.log("Send deepl:",formData);let xhr=new XMLHttpRequest;xhr.onreadystatechange=()=>{if(xhr.readyState===XMLHttpRequest.DONE){const status=xhr.status;if(0===status||status>=200&&status<400){let data=JSON.parse(xhr.responseText);editor.innerHTML=data.translations[0].text,tempTranslations[key].translation=data.translations[0].text,icon.setAttribute("role","button"),icon.setAttribute("data-status","local-coursetranslator/tosave"),injectImageCss(editorSettings)}else icon.setAttribute("data-status","local-coursetranslator/failed"),icon.setAttribute("role","status")}},xhr.open("POST",config.deeplurl),xhr.send(formData)},injectImageCss=editorSettings=>{const css=document.createElement("style");if(css.textContent="img{background-color:yellow !important;font-style: italic;}","iframe"===editorSettings.editorType){let editorschildrens=Array.from(editorSettings.editor.parentElement.children),found=!1;for(let j in editorschildrens){if(editorschildrens[j].innerText===css.innerText){found=!0;break}}found||editorSettings.editor.parentElement.appendChild(css)}},findEditor=key=>{let e=document.querySelector(_selectors.default.editors.types.basic.replace("<KEY>",key)),et="basic";if(null===e)switch(mainEditorType){case"atto":et="iframe",e=document.querySelector(_selectors.default.editors.types.atto.replaceAll("<KEY>",key));break;case"tiny":et="iframe",e=document.querySelector(_selectors.default.editors.types.tiny.replaceAll("<KEY>",key)).contentWindow.tinymce;break;case"marklar":case"textarea":e=document.querySelector(_selectors.default.editors.types.other.replaceAll("<KEY>",key))}return{editor:e,editorType:et}},toggleAllCheckboxes=e=>{e.target.checked?checkboxes.forEach((i=>{i.checked=!getParentRow(i).classList.contains("d-none"),toggleStatus(i.getAttribute("data-key"),i.checked)})):checkboxes.forEach((i=>{i.checked=!1,toggleStatus(i.getAttribute("data-key"),!1)})),toggleAutotranslateButton()},getParentRow=node=>node.closest(replaceKey(_selectors.default.sourcetexts.parentrow,node.getAttribute("data-key"))),toggleAutotranslateButton=()=>{autotranslateButton.disabled=!0;for(let i in checkboxes){if(checkboxes[i].checked){autotranslateButton.disabled=!1;break}}},onToggleMultilang=e=>{e.classList.toggle("showing");let keyid=e.getAttribute("aria-controls"),key=keyidToKey(keyid),source=document.querySelector(replaceKey(_selectors.default.sourcetexts.keys,key)),multilang=document.querySelector(replaceKey(_selectors.default.sourcetexts.multilangs,keyid));source.classList.toggle("show"),multilang.classList.toggle("show")},toJsonArray=function(s){let sep=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",";return JSON.stringify(s.split(sep))},replaceKey=(s,k)=>s.replace("<KEY>",k),keyidToKey=k=>{let m=k.match(/^(.+)-(.+)-(.+)$/i);return`${m[1]}[${m[2]}][${m[3]}]`}}));

//# sourceMappingURL=coursetranslator.min.js.map