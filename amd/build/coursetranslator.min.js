define("local_coursetranslator/coursetranslator",["exports","core/ajax","./selectors","core/modal"],(function(_exports,_ajax,_selectors,_modal){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/*
   * @module     local_coursetranslator/coursetranslator
   * @copyright  2022 Kaleb Heitzman <kaleb@jamfire.io>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_selectors=_interopRequireDefault(_selectors),_modal=_interopRequireDefault(_modal);let tempTranslations={},editorType="",config={},autotranslateButton={},checkboxes=[];_exports.init=cfg=>{config=cfg,window.console.log(config),editorType=config.userPrefs,autotranslateButton=document.querySelector(_selectors.default.actions.autoTranslateBtn),checkboxes=document.querySelectorAll(_selectors.default.actions.checkBoxes),window.console.log(_selectors.default.statuses.checkedCheckBoxes),document.addEventListener("change",(e=>{e.target.closest(_selectors.default.actions.targetSwitcher)&&switchTarget(e),e.target.closest(_selectors.default.actions.sourceSwitcher)&&switchSource(e),e.target.closest(_selectors.default.actions.showUpdated)&&showUpdated(e),e.target.closest(_selectors.default.actions.showNeedUpdate)&&neededUpdate(e)})),document.addEventListener("click",(e=>{e.target.closest(_selectors.default.actions.autoTranslateBtn)&&(config.currentlang==config.lang||null==config.lang?_modal.default.create({title:"Cannot call deepl",body:"<p>Both languges are the same {$config.lang}</p>",show:!0,removeOnClose:!0}):doAutotranslate(e)),e.target.closest(_selectors.default.actions.selecAllBtn)&&selectAll(e)}));const searchex=/{\s*mlang\s+((?:[a-z0-9_-]+)(?:\s*,\s*[a-z0-9_-]+\s*)*)\s*}(.*?){\s*mlang\s*}/gids,mlangparser=text=>{if(null===text.match(searchex))return text;let result=text.replace(searchex,(match=>((lang,match)=>{let blocklang=match.split(searchex)[1],blocktext=match.split(searchex)[2];return blocklang===lang?blocktext:""})(config.lang,match)));if(0===result.length){let mlangex=new RegExp("{mlang other}(.*?){mlang}","dgis"),matches=text.match(mlangex);if(matches[0].split(searchex)[2])return matches[0].split(searchex)[2]}return result};config.autotranslate&&(selectAll.disabled=!1);document.querySelectorAll(_selectors.default.actions.validatorsBtns).forEach((e=>{e.addEventListener("click",(e=>{let key=e.target.parentElement.dataset.keyValidator;null===tempTranslations[key]||void 0===tempTranslations[key]?window.console.log(`Transaltion key "${key}" is undefined `):saveTranslation(key,tempTranslations[key].editor,tempTranslations[key].editor.innerHTML)}))})),config.autotranslate&&checkboxes.forEach((e=>{e.disabled=!1})),checkboxes.forEach((e=>{e.addEventListener("change",(()=>{toggleAutotranslateButton()}))}));const saveTranslation=(key,editor,text)=>{window.console.log(key);let selector=_selectors.default.editors.multiples.editorsWithKey.replace("<KEY>",key);window.console.log(selector),window.console.log(document.querySelector(selector));let element=document.querySelector(selector),id=element.getAttribute("data-id"),tid=element.getAttribute("data-tid"),table=element.getAttribute("data-table"),field=element.getAttribute("data-field"),fielddata={};fielddata.courseid=config.courseid,fielddata.id=parseInt(id),fielddata.table=table,fielddata.field=field,_ajax.default.call([{methodname:"local_coursetranslator_get_field",args:{data:[fielddata]},done:data=>{window.console.log(data);let fieldtext=data[0].text;if(data.length>0){let textarea=document.querySelector(_selectors.default.editors.multiples.textAreas.replace("<KEY>",key)),updatedtext=getupdatedtext(fieldtext,text),tdata={};tdata.courseid=config.courseid,tdata.id=parseInt(id),tdata.tid=tid,tdata.table=table,tdata.field=field,tdata.text=updatedtext;const successMessage=()=>{element.classList.add("local-coursetranslator__success");let indicator=`<div \n                   class="local-coursetranslator__success-message" \n                   data-status="local-coursetranslator/success-message" \n                   data-key="${key}"\n                 >${config.autosavedmsg}</div>`;element.after(...(string=>{let parser;if((()=>{if(!window.DOMParser)return!1;parser=new DOMParser;try{parser.parseFromString("x","text/html")}catch(err){return!1}return!0})())return parser=new DOMParser,parser.parseFromString(string,"text/html").body.childNodes;const dom=document.createElement("div");return dom.innerHTML=string,dom})(indicator));let status=document.querySelector(_selectors.default.statuses.keys.replace("<KEY>",key));status.classList.replace("badge-danger","badge-success"),status.innerHTML=config.uptodate,setTimeout((()=>{let indicatorNode=document.querySelector(_selectors.default.statuses.successMessages.replace("<KEY>",key));element.parentNode.removeChild(indicatorNode)}),3e3)},errorMessage=error=>{window.console.log(error),editor.classList.add("local-coursetranslator__error")};_ajax.default.call([{methodname:"local_coursetranslator_update_translation",args:{data:[tdata]},done:data=>{config.debug>0&&window.console.log("ws: ",key,data),data.length>0?(successMessage(),textarea.innerHTML=data[0].text,config.currentlang===config.lang&&(document.querySelector(_selectors.default.sourcetexts.keys.replace("<KEY>",key)).innerHTML=text)):errorMessage()},fail:error=>{errorMessage(error)}}])}else window.console.log(data)},fail:error=>{window.console.log(error)}}])},getupdatedtext=(fieldtext,text)=>{let lang=config.lang,mlangtext=`{mlang ${lang}}${text}{mlang}`;if(-1===fieldtext.indexOf("{mlang"))return"other"===lang?mlangtext:`{mlang other} ${fieldtext} {mlang}{mlang ${lang}} ${text} {mlang}`;let replacex=new RegExp(`{*mlang +(${lang})}(.*?){*mlang*}`,"dgis");const updatedString=`{mlang ${lang}} ${text} {mlang}`;return fieldtext.match(replacex)?fieldtext.replace(replacex,updatedString):fieldtext+updatedString};window.addEventListener("load",(()=>{document.querySelectorAll(_selectors.default.editors.contentEditable).forEach((editor=>{editor.addEventListener("focusout",(()=>{})),editor.addEventListener("click",(()=>{editor.classList.remove("local-coursetranslator__success"),editor.classList.remove("local-coursetranslator__error")}))}))})),window.addEventListener("load",(()=>{document.querySelectorAll(_selectors.default.editors.textarea).forEach((textarea=>{let key=textarea.getAttribute("data-key"),text=textarea.innerHTML,editor=document.querySelector(_selectors.default.editors.multiples.contentEditableKeys.replace("<KEY>",key)),langpattern=`{mlang ${config.lang}}(.*?){mlang}`,langex=new RegExp(langpattern,"dgis"),matches=text.match(langex),parsedtext=mlangparser(text);if(matches&&1===matches.length)editor.innerHTML=parsedtext;else if(matches&&matches.length>1){document.querySelector(_selectors.default.editors.multiples.checkBoxesWithKey.replace("<KEY>",key)).remove(),document.querySelector(_selectors.default.editors.multiples.editorChilds.replace("<KEY>",key)).remove(),document.querySelector(_selectors.default.editors.multiples.textAreas.replace("<KEY>",key)).remove();let p=document.createElement("p");p.innerHTML=`<em><small>${config.multiplemlang}</small></em>`,document.querySelector(_selectors.default.editors.multiples.editorsWithKey.replace("<KEY>",key)).append(p)}else editor.innerHTML=parsedtext}))}))};const showUpdated=e=>{let items=document.querySelectorAll(_selectors.default.statuses.updated);e.target.checked?items.forEach((item=>{item.classList.remove("d-none")})):items.forEach((item=>{item.classList.add("d-none")}))},switchTarget=e=>{window.console.info("switchTarget");let url=new URL(window.location.href);url.searchParams.set("target_lang",e.target.value);let newUrl=url.toString();window.location=newUrl},switchSource=e=>{window.console.info("switchSource");let url=new URL(window.location.href);url.searchParams.set("lang",e.target.value);let newUrl=url.toString();window.location=newUrl},neededUpdate=e=>{window.console.info("Need update toggled"),window.console.info("source_lang",config.currentlang),window.console.info("target_lang",config.lang);let items=document.querySelectorAll(_selectors.default.statuses.needsupdate);e.target.checked?items.forEach((item=>{item.classList.remove("d-none")})):items.forEach((item=>{item.classList.add("d-none")}))},doAutotranslate=()=>{document.querySelectorAll(_selectors.default.statuses.checkedCheckBoxes).forEach((ckBox=>{let key=ckBox.getAttribute("data-key");getTranslation(key)}))},getTranslation=key=>{tempTranslations[key]={};let editor=findEditor(key),sourceText=document.querySelector(_selectors.default.sourcetexts.keys.replace("<KEY>",key)).getAttribute("data-sourcetext-raw");tempTranslations[key]={editor:editor,source:sourceText,translation:""},window.console.log(tempTranslations);let formData=new FormData;formData.append("text",sourceText),formData.append("source_lang",config.currentlang.toUpperCase()),formData.append("target_lang",config.lang.toUpperCase()),formData.append("auth_key",config.apikey),formData.append("tag_handling",document.querySelector(_selectors.default.deepl.tag_handling).checked?"html":"xml"),formData.append("context",document.querySelector(_selectors.default.deepl.context).value??null),formData.append("split_sentences",document.querySelector(_selectors.default.deepl.split_sentences).value),formData.append("preserve_formatting",document.querySelector(_selectors.default.deepl.preserve_formatting).checked),formData.append("formality",document.querySelector(_selectors.default.deepl.formality).value),formData.append("glossary_id",document.querySelector(_selectors.default.deepl.glossary_id).value),formData.append("outline_detection",document.querySelector(_selectors.default.deepl.outline_detection).checked),formData.append("non_splitting_tags",toJsonArray(document.querySelector(_selectors.default.deepl.non_splitting_tags).value)),formData.append("splitting_tags",toJsonArray(document.querySelector(_selectors.default.deepl.splitting_tags).value)),formData.append("ignore_tags",toJsonArray(document.querySelector(_selectors.default.deepl.ignore_tags).value)),window.console.log("Send deepl:",formData);let xhr=new XMLHttpRequest;xhr.onreadystatechange=()=>{if(xhr.readyState===XMLHttpRequest.DONE){const status=xhr.status;if(0===status||status>=200&&status<400){let data=JSON.parse(xhr.responseText);window.console.log("deepl:",key,data),editor.innerHTML=data.translations[0].text,tempTranslations[key].translation=data.translations[0].text}else window.console.log("error",status)}},xhr.open("POST",config.deeplurl),xhr.send(formData)},findEditor=key=>{switch(editorType){case"atto":return document.querySelector(_selectors.default.editors.types.atto.replace("<KEY>",key));case"tiny":return document.querySelector(_selectors.default.editors.types.tiny.replace("<KEY>",key)).contentWindow.tinymce;case"marklar":case"textarea":return document.querySelector(_selectors.default.editors.types.other.replace("<KEY>",key))}},selectAll=e=>{e.target.checked?checkboxes.forEach((e=>{e.checked=!0})):checkboxes.forEach((e=>{e.checked=!1})),toggleAutotranslateButton()},toggleAutotranslateButton=()=>{let checkboxItems=[];checkboxes.forEach((e=>{checkboxItems.push(e.checked)}));let checked=!!checkboxItems.find((checked=>!0===checked));config.autotranslate&&checked?autotranslateButton.disabled=!1:autotranslateButton.disabled=!0},toJsonArray=function(s){let sep=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",";return JSON.stringify(s.split(sep))}}));

//# sourceMappingURL=coursetranslator.min.js.map